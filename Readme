# GIS系统设计与实践大作业：赵安琪  2018302141266
------------------------------------------------------------------------
总体框架设计：
1.创建对应文件夹，用来存放不同资源
  (1)content:右侧容器中实现的界面
     A.ChCovid:实现中国疫情情况的界面呈现(未实现功能，内容为空)
     B.Covid：实现全球疫情情况的界面呈现(部分功能实现)
       a.Echarts-nCov(实现功能，单独设置文件夹的目的即为与未实现功能区分开)
       (使用Echart实现功能，包括css样式设计，js数据获取及库获取，各页面代码)
       b.全球疫情情况下八个功能的页面代码
       (实现部分通过引入Echarts-nCov中实现的页面获取)
  (2)css:主界面的样式设置
  (3)js:主界面框架的功能
  (4)lib:主界面所需的外部库
  (5)index：主界面页面代码书写
------------------------------------------------------------------------
总体界面分为两部分：
总体框架：
左：功能选择列表
    1.中国疫情情况
    2.全球疫情情况 
    (其中，每个板块分为八个模块：{
       1.确诊病例  2.治愈病例  3.死亡人数  4.疫苗接种
       5.医疗资源需求          6.疫情数据统计
      7.疫情演变演示           8.Covid-19舆情信息}

右：内容呈现
-------------------------------------------------------------------------
详细设计：
1.地图呈现(包括全球累计确诊，治愈，死亡)：
  (1)采用flex布局设计地图界面:map.css
  (2)呈现世界地图：world.js
  (3)获取数据并处理，形成可用的json文件并读取赋给变量data(case.js,cure.js,dead.js,数据获取函数：ajax)
  (4)使用echarts函数实现data与地区一一对应，并实现鼠标悬浮显示数据，以及根据数值对区域进行颜色填充并绘制图例
  (5)相应功能页面代码书写
2.统计图呈现(三部分)
  (1)采用flex布局设计统计图表界面，分为左右两部分，左边上部南丁格尔玫瑰图，下部为折线图，右边为前十五的国家扇形分布图:map.css
  (2)初识化ECharts,指定配置项和数据
  (3)配置项设置给ECarts实例对象,其中重要步骤为获取数据并赋给图表相应变量(数据获取函数：ajax)
  (4)相应功能页面代码书写
-------------------------------------------------------------------------
实现功能：
全球疫情情况：
1.累计确诊：红色调颜色呈现全球各国累计确诊病例数量，鼠标悬浮时可弹窗显示地名、数据类型、确诊人数     (content.Covid.case-->content.Covid.Echarts-nCov.acase)
2.累计治愈：绿色调颜色呈现全球各国累计治愈病例数量，鼠标悬浮时可弹窗显示地名、数据类型、治愈人数     (content.Covid.recover-->content.Covid.Echarts-nCov.acure)
3.累计死亡：黑色调颜色呈现全球各国累计死亡病例数量，鼠标悬浮时可弹窗显示地名、数据类型、死亡人数     (content.Covid.death-->content.Covid.Echarts-nCov.adead)
4.图形统计(Covid.statistic-->Echarts-nCov.astatistic)：
(1)各洲累计确诊分布的南丁格尔玫瑰图；
(2)全球疫情趋势(总体确诊人数、死亡人数随时间变化)的折线图
(3)世界疫情累计确诊情况前十五的国家扇形分布图

(注：其余未实现功能(如中国疫情情况)在项目中存在html但没有内容)
--------------------------------------------------------------------------
接口：
(1)框架内：
A.样式文件：
base.css主框架布局等页面样式，主界面的样式设置                        (css)
chart.css全球疫情数据图形统计界面的样式设置                           (content.Covid.Echarts-nCov.css)
map.css全球疫情情况的累计确诊，累计治愈，累计死亡界面的样式设置        (content.Covid.Echarts-nCov.css)

B.功能文件：
init.js 实现主界面框架的所有功能                                     (js)
case.js 实现图形统计和全球累计确诊界面的功能                          (content.Covid.Echarts-nCov.js)
cure.js 实现全球累计治愈界面的功能                                   (content.Covid.Echarts-nCov.js)
dead.js 实现全球累计死亡界面的功能                                   (content.Covid.Echarts-nCov.js)

C.库文件：
echarts.min.js  调用echarts API使用其函数
flexible.js     调用flexible API布局
jquery.js       调用jquery API从json文件中获取数据
world.js        调用世界地图的js文件

(2)框架外(疫情数据源[腾讯])：
https://view.inews.qq.com/g2/getOnsInfo?name=disease_h5 （国内疫情）
https://api.inews.qq.com/newsqa/v1/automation/modules/list?modules=FAutoGlobalStatis,FAutoContinentStatis,FAutoGlobalDailyList,FAutoCountryConfirmAdd （海外每日疫情）
https://api.inews.qq.com/newsqa/v1/automation/foreign/country/ranklist（其他国家疫情状况）
--------------------------------------------------------------------------
数据：
(1)地图数据：world.js 
(2)疫情数据：
   获取源：腾讯
   方式：API链接
   特点：实时更新
   数据处理：函数：ajax，根据需要提取所需数据生成的js（case.js，cure.js，dead.js）
   数据模式：地图显示：{'name':'';value:''}
            南丁格尔玫瑰图,扇形分布图:{'name':'';value:''}
            全球疫情趋势折线图：{'date':'','value1':'','value2':''}
--------------------------------------------------------------------------
总结：
虽然这个界面看起来比较简陋，但对于一个连语言都不太会的小白来说，边设计边查阅各种资料，学习如何实现一个界面实在不是件容易的事情。
最困难的部分就是获取数据，即使有了数据源，由于其内容过于丰富，需要有选择地进行选取信息并形成自己的结构，所以处理信息源的过程生成各种能用的js文件耗时巨长。
最后能把部分功能实现出来，尽管简陋，但仍然十分有成就感，总之，对于一个没接触过系统设计与实现的人来说，能有这样的成果我已经感到很自豪了。
总体的系统设计很丰满，我希望能在课程结束之后能慢慢将其填充完毕，真正做成一个内容丰富的疫情信息可视化系统。



